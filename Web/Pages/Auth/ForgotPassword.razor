@page "/forgot-password"
@attribute [AllowAnonymous]

@using API.APIService
@using Blazored.FluentValidation
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Forms
@using BlazorCocktails.Client.Shared.Helper

@inject APIClient Api
@inject ISnackbar Snackbar
@inject NavigationManager Nav
@inject IStringLocalizer<App> L

<PageTitle>@L["Password_ForgotTitle"]</PageTitle>

<MudPaper Class="auth-page--paper" Elevation="0" Square="true">
    <div class="auth-card">
        <div class="bg-gradient-auth">
            <MudText Typo="Typo.h5">@L["Password_ForgotTitle"]</MudText>
        </div>

        <div class="pa-6">
            <EditForm Model="_model"
                      OnValidSubmit="SubmitAsync"
                      OnInvalidSubmit="InvalidSubmit">
                <FluentValidationValidator DisableAssemblyScanning="true" />

                <MudText Class="mb-3 opacity-80">@L["Password_ForgotIntro"]</MudText>

                <MudTextField T="string"
                              Variant="Variant.Filled"
                              Label="@L["Password_ResetEmail"]"
                              Placeholder="@L["Register_EmailPlaceholder"]"
                              @bind-Value="_model.Email"
                              For="@(() => _model.Email)"
                              InputType="InputType.Email"
                              Immediate="true"
                              Disabled="@_busy"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Email" />

                <MudStack Row="true" Spacing="2" Class="mt-6">
                    <MudButton Variant="Variant.Filled"
                               Class="auth-btn"
                               ButtonType="ButtonType.Submit"
                               Disabled="@_busy">
                        @(_busy? L["Register_Working"] : L["Password_Send"])
                    </MudButton>

                    <MudButton Variant="Variant.Outlined"
                               Class="auth-btn-outline"
                               Href="/login"
                               Disabled="@_busy">
                        @L["Password_BackToLogin"]
                    </MudButton>
                </MudStack>
            </EditForm>
        </div>
    </div>
</MudPaper>

@code {
    private bool _busy;
    private ForgotPasswordDTO _model = new();

    private void InvalidSubmit(EditContext ctx)
    {
        var first = ctx.GetValidationMessages().FirstOrDefault() ?? L["Err_Generic"];
        Snackbar.Add(first, Severity.Warning);
    }

    private async Task SubmitAsync()
    {
        _busy = true;
        try
        {
            var email = _model.Email?.Trim() ?? string.Empty;
            await Api.Users_ForgotPasswordAsync(new ForgotPasswordDTO { Email = email });
            Snackbar.Add(L["Password_ForgotSent"], Severity.Success);
        }
        catch (Exception ex)
        {
            ApiErrorHelper.Handle(ex, Snackbar, L, Nav);
        }
        finally { _busy = false; }
    }
}
